@import 'styles/colors.scss';

@mixin grid-center-last($columns) {
  $total_columns: $columns * 2;
  $offset: $columns - 1;
  $span: $total_columns / $columns;
  $nth-child: if($columns % 2 == 0, 'odd', 'even');

  grid-template-columns: repeat($total_columns, 1fr);

  & > * {
    grid-column: span 2;

    &:nth-last-child(#{$offset}):nth-child(#{$nth-child}) {
      grid-column: $span / span $span;
    }
  }
}

@mixin mobile-column {
  grid-template-columns: 1fr;
  max-width: calc(100vw - 2rem);
}

.cdp-feed {
  display: grid;
  grid-gap: 2rem;
  justify-content: center;
  max-width: calc(100vw - 6rem);
  margin: 0 auto;
  padding: 2rem 0;

  &.base {
    @include mobile-column;

    @media screen and (min-width: 501px) {
      @include grid-center-last(2);
    }
  }

  &.three {
    @include mobile-column;

    @media screen and (min-width: 501px) and (max-width: 768px) {
      @include grid-center-last(2);
    }

    @media screen and (min-width: 769px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  &.single {
    grid-template-columns: 400px;
  }

  &.multi {
    @include mobile-column;

    @media screen and (min-width: 501px) {
      @include grid-center-last(3);
    }
  }
}

.feed-item {
  background-repeat: no-repeat;
  background-size: cover;
  display: flex;
  flex-direction: column;
  height: 220px;
  justify-content: flex-end;
  max-width: 400px;

  &:hover {
    cursor: pointer;
  }

  &-link {
    display: flex;
    flex-direction: column-reverse;
    text-decoration: none;
    height: 100%;

    &:focus {
      border: $focusBorder;
      margin: -1px;
    }
  }

  &-title {
    background-color: rgba($color: $blackStandard, $alpha: 0.7);
    color: $white;
    font-weight: bold;
    margin: 0 !important;
    padding: 1rem;
  }
}
